// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using farmers_market_rest_api.Persistence.Context;

namespace farmers_market_rest_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210210052532_imitial")]
    partial class imitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryCode");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DistrictCode");

                    b.Property<int?>("DivisionId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CountryId");

                    b.Property<string>("DivisionCode");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MarketCode");

                    b.Property<string>("Name");

                    b.Property<int?>("UnionOrWardId");

                    b.HasKey("Id");

                    b.HasIndex("UnionOrWardId");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.UnionOrWard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("UnionOrWardCode");

                    b.Property<int?>("UpozilaId");

                    b.HasKey("Id");

                    b.HasIndex("UpozilaId");

                    b.ToTable("UnionOrWards");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.Upozila", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DistrictId");

                    b.Property<string>("Name");

                    b.Property<string>("UpozilaCode");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Upozillas");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Business.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Business.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FarmerId");

                    b.Property<string>("FarmerName");

                    b.Property<string>("FarmerPhoneNo");

                    b.Property<string>("HoleSellerId");

                    b.Property<string>("HoleSellerName");

                    b.Property<string>("HoleSellerPhoneNo");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderNo");

                    b.Property<double>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("FarmerId");

                    b.HasIndex("HoleSellerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Business.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("OrderId");

                    b.Property<int?>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Business.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl1");

                    b.Property<string>("ImageUrl2");

                    b.Property<string>("Name");

                    b.Property<float>("Price");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Shop.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl1");

                    b.Property<string>("ImageUrl2");

                    b.Property<int?>("InstrumentCategoryId");

                    b.Property<string>("Name");

                    b.Property<float>("Price");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentCategoryId");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Shop.InstrumentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("InstrumentCategories");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Shop.InstrumentOrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("InstrumentId");

                    b.Property<int?>("OrderShopId");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("OrderShopId");

                    b.ToTable("InstrumentOrderDetails");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Shop.OrderShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderNo");

                    b.Property<string>("PhoneNo");

                    b.Property<string>("RoleId");

                    b.Property<double>("TotalAmount");

                    b.Property<string>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderShops");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.User.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.User.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ApplicationRoleId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<int?>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<int?>("DistrictId");

                    b.Property<string>("DistrictName");

                    b.Property<int?>("DivisionId");

                    b.Property<string>("DivisionName");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<int>("FarmerCode");

                    b.Property<string>("FirstName");

                    b.Property<int>("HoleSellerCode");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("MarketCode");

                    b.Property<int?>("MarketId");

                    b.Property<string>("MarketName");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("PostalCode");

                    b.Property<string>("ProfilePhoto");

                    b.Property<string>("RoleName");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<int?>("UnionOrWardId");

                    b.Property<string>("UnionOrWardName");

                    b.Property<int?>("UpozilaId");

                    b.Property<string>("UpozilaName");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("MarketId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.HasIndex("UnionOrWardId");

                    b.HasIndex("UpozilaId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.District", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.Division", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.Market", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.UnionOrWard", "UnionOrWard")
                        .WithMany()
                        .HasForeignKey("UnionOrWardId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.UnionOrWard", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.Upozila", "Upozila")
                        .WithMany()
                        .HasForeignKey("UpozilaId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Area.Upozila", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Business.Order", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationUser", "Farmer")
                        .WithMany()
                        .HasForeignKey("FarmerId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationUser", "Holeseller")
                        .WithMany()
                        .HasForeignKey("HoleSellerId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Business.OrderDetails", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Business.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Business.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Business.Product", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Business.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Shop.Instrument", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Shop.InstrumentCategory", "InstrumentCategory")
                        .WithMany()
                        .HasForeignKey("InstrumentCategoryId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Shop.InstrumentOrderDetails", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.Shop.Instrument", "Instrument")
                        .WithMany("OrderDetails")
                        .HasForeignKey("InstrumentId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Shop.OrderShop", "OrderShop")
                        .WithMany("InstrumentOrderDetails")
                        .HasForeignKey("OrderShopId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.Shop.OrderShop", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("farmers_market_rest_api.Domain.Models.User.ApplicationUser", b =>
                {
                    b.HasOne("farmers_market_rest_api.Domain.Models.User.ApplicationRole", "ApplicationRole")
                        .WithMany()
                        .HasForeignKey("ApplicationRoleId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.Market", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.UnionOrWard", "UnionOrWard")
                        .WithMany()
                        .HasForeignKey("UnionOrWardId");

                    b.HasOne("farmers_market_rest_api.Domain.Models.Area.Upozila", "Upozilla")
                        .WithMany()
                        .HasForeignKey("UpozilaId");
                });
#pragma warning restore 612, 618
        }
    }
}
